AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Image moderation stack for EcoFrenzy

Parameters:
  ExpressApiEndpoint:
    Type: String
    Description: "API Gateway endpoint URL for Prod stage for Express function"

  ImageChallengeNotificationTopic:
    Type: String
    Description: "SNS Topic for uploaded image & corresponding challenge notifications"

  SNSCompleteChallengeTopic:
    Type: String
    Description: "SNS Topic for complete challenge notifications"

Resources:
  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SageMakerExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      Policies:
        - PolicyName: IAMGetRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:GetRole"
                  - "iam:PassRole"
                Resource: "*"
        - PolicyName: S3BucketAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                  - "s3:HeadBucket"
                Resource: "*"
        - PolicyName: LambdaExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:PutParameter"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"

  HFVQADeployFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: vqa_deploy_function.handler
      Runtime: python3.10
      CodeUri: vqa_deploy/
      Timeout: 900 # Set the timeout to 15 minutes
      Role: !GetAtt SageMakerExecutionRole.Arn
      Environment:
        Variables:
          EXECUTION_ROLE_NAME: SageMakerExecutionRole

  HFVQACustomResource:
    Type: Custom::HFVQADeploy
    Properties:
      ServiceToken: !GetAtt HFVQADeployFunction.Arn

  ImageModerationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ImageModerationRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: RekognitionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "rekognition:DetectModerationLabels"
                Resource: "*"
        - PolicyName: SageMakerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sagemaker:InvokeEndpoint"
                Resource: "*"
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: "*"
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:GetParameter"
                Resource: "*"
        - PolicyName: SNSSubscribeAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Subscribe"
                Resource: !Ref ImageChallengeNotificationTopic
        - PolicyName: SNSPublishAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: 
                  - !Ref SNSCompleteChallengeTopic
                  - "arn:aws:sns:ap-southeast-1:885537931206:app/GCM/EcoFrenzy-Android"
                  - "arn:aws:sns:ap-southeast-1:885537931206:SNSCompleteChallengeTopic"
        - PolicyName: LambdaExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  ImageModerationFunction:
    Type: AWS::Serverless::Function
    DependsOn: HFVQACustomResource
    Properties:
      CodeUri: src/
      Handler: lambda_handler.lambda_handler
      Runtime: python3.10
      Role: !GetAtt ImageModerationRole.Arn
      Events:
        ImageUploadEvent:
          Type: SNS
          Properties:
            Topic: !Ref ImageChallengeNotificationTopic
      Environment:
        Variables:
          EXPRESS_API_ENDPOINT: !Ref ExpressApiEndpoint
          SNS_COMPLETE_CHALLENGE_TOPIC: !Ref SNSCompleteChallengeTopic